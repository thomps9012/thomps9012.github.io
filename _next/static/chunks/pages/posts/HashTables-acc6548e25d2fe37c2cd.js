_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{Y8mF:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return b}));var o=s("nKUr"),n=s("YFqc"),r=s.n(n),a=s("g4pe"),c=s.n(a),i=s("CafY");function b(){return Object(o.jsx)(o.Fragment,{children:Object(o.jsxs)(i.a,{children:[Object(o.jsx)(c.a,{children:Object(o.jsx)("title",{children:"Hash Tables and a Ransom Note"})}),Object(o.jsx)("h1",{}),Object(o.jsxs)("h2",{children:["Hash Tables and a Ransom Note Solution",Object(o.jsx)("br",{}),Object(o.jsx)("iframe",{src:"https://giphy.com/embed/3o6wNVP7HdbF47mJKE",width:"480",height:"360",frameBorder:"0",class:"giphy-embed",allowFullScreen:!0}),Object(o.jsx)("p",{children:Object(o.jsx)("a",{href:"https://giphy.com/gifs/spongebob-spongebob-squarepants-episode-11-3o6wNVP7HdbF47mJKE",children:"via GIPHY"})})]}),Object(o.jsxs)("p",{children:["The hash tables and a ransom note problem was one that was rated relatively easy, and gave me about a day and a half worth of work before solving. My first instinct was to solve the problem using two nested for loops, yet after a bit of pseudo-coding and testing that solution seemed to fall through. Next I discovered the _.intersection library in JavaScript which seemed to be on the right track. My solution was now working on all but nine of the twenty-two test cases:",Object(o.jsxs)("pre",{children:["//imports our underscore library",Object(o.jsx)("br",{}),"var _ = require('underscore');",Object(o.jsx)("br",{}),Object(o.jsx)("br",{}),"//checks to see if the note array is larger than the magazine array",Object(o.jsx)("br",{}),"if(note.length ",">"," magazine.length)","{",Object(o.jsx)("br",{}),'console.log("No");',Object(o.jsx)("br",{}),"}",Object(o.jsx)("br",{}),Object(o.jsx)("br",{}),"//checks to see if the arrays match each other in elements",Object(o.jsx)("br",{}),"if(_.intersection(magazine, note).sort() == note.sort())","{",Object(o.jsx)("br",{}),'console.log("Yes")',Object(o.jsx)("br",{}),"}",Object(o.jsx)("br",{}),Object(o.jsx)("br",{}),"//our last else case else ","{",Object(o.jsx)("br",{}),'console.log("No")',Object(o.jsx)("br",{}),"}"]}),"Since this solution only worked 60% of the time, it was a no go, so on the interwebs to find a solution. I came across Diljeet's blog post on the solution and whew! it was a life saver. His solution uses only eleven lines of code to solve the problem and does so efficiently.",Object(o.jsxs)("pre",{children:["function ransomPossible(note, magazine)",Object(o.jsx)("br",{}),"for(let i = 0; i less than note.length; i++)",Object(o.jsx)("br",{}),"let finder = magazine.indexOf(note[i])",Object(o.jsx)("br",{}),"if(finder != -1)",Object(o.jsx)("br",{}),'magazine[finder] = ""',Object(o.jsx)("br",{}),"if(i === note.length - 1)","{",Object(o.jsx)("br",{}),'console.log("Yes")',Object(o.jsx)("br",{}),"}",Object(o.jsx)("br",{}),"else ","{",Object(o.jsx)("br",{}),'console.log("No")',Object(o.jsx)("br",{}),"break",Object(o.jsx)("br",{}),"}",Object(o.jsx)("br",{}),"}",Object(o.jsx)("br",{}),"}"]}),Object(o.jsx)("h2",{children:"Boom ... Success!"}),"This solution does the following:",Object(o.jsx)("br",{}),"1. Creates a finder array that loops through the magazine array and finds all occurances of words in the note array (including duplicates).",Object(o.jsx)("br",{}),"2. Checks loops through the finder array and checks to see if it's an exact match to our note array.",Object(o.jsx)("br",{}),"3. Returns Yes if the arrays match, else it logs No in the console.log and breaks the loop.",Object(o.jsx)("br",{}),Object(o.jsx)("h3",{children:"And that's how you compare two Hash Tables in Vanilla JavaScript to match words!"})]}),Object(o.jsx)("h4",{children:Object(o.jsx)(r.a,{href:"https://www.hackerrank.com/challenges/ctci-ransom-note/problem",children:Object(o.jsx)("a",{children:"A link to the problem on HackerRank"})})}),Object(o.jsx)("h4",{children:Object(o.jsx)(r.a,{href:"https://medium.com/@ctrlalt_diljeet/hash-tables-ransom-note-d500588b08d7",children:Object(o.jsx)("a",{children:"Here's a link to the Diljeet's Blog Post on Medium that came through in the clutch"})})})]})})}},xKuC:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/HashTables",function(){return s("Y8mF")}])}},[["xKuC",0,2,1,3,4]]]);